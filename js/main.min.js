(function(e, t, n, r) {
    var i = {
        elements: {},
        blueBoardIndexes: [3, 4, 5, 6, 7],
        greenBoardIndexes: [11, 12, 13],
        selectors: {
            body: "body",
            fullpage: "#fullpage",
            sections: ".section",
            lastBlock: "#last-block",
            sideNav: "#side-nav",
            flare: '.flare[data-orientation="vertical"]'
        },
        _bindVendors: function() {
            var e = this;
            this.elements.fullpage.fullpage({
                anchors: ["intro", "bdaywish", "about", "howimet1", "howimet2", "howimet3", "howimet4", "howimet5", "categories", "implement", "framework", "goals", "me"],
                menu: "#side-nav",
                afterLoad: function(t, n) {
                    e._afterload(t, n)
                },
                onLeave: function(t, n, r) {
                    e._onleave(t, n, r)
                }
            })
        },
        _bindEvents: function() {
            e(t).on("orientationchange", function() {
                location.reload()
            })
        },
        _getElements: function() {
            this.elements.window = e(t);
            this.elements.width = this.elements.window.width();
            this.elements.height = this.elements.window.height();
            this.elements = r.getElements(this.selectors)
        },
        _afterload: function(t, n) {
            var r = this;
            n = n - 1, board = "false", boardStep = 0, isBlue = e.inArray(n, r.blueBoardIndexes), isGreen = e.inArray(n, r.greenBoardIndexes);
            e(r.elements.sections[n]).addClass("current");
            e(r.selectors.flare).removeClass("show");
            if (t === "download") {
                r.elements.sideNav.hide();
                r.elements.lastBlock.find(".orange").delay(800).fadeIn(500);
                r.elements.lastBlock.find(".worksheet").delay(1e3).slideDown(600);
                r.elements.lastBlock.find(".btn").delay(1800).fadeIn(500);
                r.elements.lastBlock.find(".twitter-bar").delay(2800).fadeIn(500);
                e(r.selectors.flare).addClass("show")
            } else {
                r.elements.sideNav.show();
                e(r.selectors.flare).removeClass("show")
            }
            if (isBlue > -1) {
                board = "blue";
                boardStep = isBlue
            } else if (isGreen > -1) {
                board = "green";
                boardStep = isGreen
            }
            r._updateBoardData(board, boardStep)
        },
        _onleave: function(t, n, r) {
            var i = this,
                t = t - 1,
                n = n - 1;
            e(i.elements.sections[t]).removeClass("current");
            if (i.elements.body.attr("data-board") == "blue") {
                if (e.inArray(n, i.blueBoardIndexes) == -1) {
                    i._updateBoardData("false")
                }
            }
            if (i.elements.body.attr("data-board") == "green") {
                if (e.inArray(n, i.greenBoardIndexes) == -1) {
                    i._updateBoardData("false")
                }
            }
        },
        _updateBoardData: function(e, t) {
            this.elements.body.attr("data-board", e);
            this.elements.body.data("board", e);
            this.elements.body.attr("data-board-step", t);
            this.elements.body.data("board-step", t)
        },
        initialize: function() {
            this._getElements();
            this._bindVendors();
            this._bindEvents()
        }
    };
    t.Heart = i;
    e(function() {
        i.initialize()
    })
})(jQuery, window, null, Impress)